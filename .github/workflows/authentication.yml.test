name: Authentication Workflow

on:
  workflow_call:
    inputs:
      AZURE_CLIENT_ID:
        description: Azure Client Id
        required: true
        type: string
      AZURE_TENANT_ID:
        description: Azure Tenent Id
        required: true
        type: string
      AZURE_SUBSCRIPTION_ID:
        description: Azure Subscription Id
        required: true
        type: string
      AWS_GITHUB_OIDC_ROLE_ARN:
        description: AWS OIDC Role to assume and use as a jump to the execution role
        required: true
        type: string
      AWS_GITHUB_OIDC_EXECUTION_ROLE_ARN:
        description: AWS Execution role to perform actions in the account
        required: true
        type: string
      AWS_REGION:
        description: AWS Region - even though a global service - still needs defining
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

      # Authenticate with Azure
    - name: Authenticate with Azure
      uses: azure/login@v1
      with:
          client-id: ${{ inputs.AZURE_CLIENT_ID }}
          tenant-id: ${{ inputs.AZURE_TENANT_ID }}
          subscription-id: ${{ inputs.AZURE_SUBSCRIPTION_ID }}

    - name: Show Subscription
      run: |
        az account show

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.AWS_REGION }}
        role-to-assume: ${{ inputs.AWS_GITHUB_OIDC_ROLE_ARN }}

    - name: Assume execution role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        role-to-assume: ${{ inputs.AWS_GITHUB_OIDC_EXECUTION_ROLE_ARN }}
        aws-region: ${{ inputs.AWS_REGION }}
        role-duration-seconds: 3000
        role-skip-session-tagging: true
        output-credentials: true

    - name: Test role access
      run: aws sts get-caller-identity

